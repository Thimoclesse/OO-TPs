plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.protobuf' version '0.9.2'
	id 'application' // Ajoutez ce plugin
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
	implementation project(':myServiceInterface') // Dépendance vers le module interface
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Ajout des dépendances pour Protobuf et gRPC
	implementation 'com.google.protobuf:protobuf-java:3.21.12'
	implementation 'io.grpc:grpc-protobuf:1.48.0'
	implementation 'io.grpc:grpc-stub:1.48.0'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.21.12'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.48.0'
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins {
				java {}
			}
			task.plugins {
				grpc {}
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// Pour s'assurer que les classes générées sont disponibles pour la compilation
sourceSets {
	main {
		java {
			srcDirs += "${project(':myServiceInterface').projectDir}/src/main/java"
		}
	}
}

// Spécifiez la classe principale
application {
	mainClassName = 'com.example.myServiceServer.MyServiceServerApplication' // Assurez-vous que le package est correct
}
